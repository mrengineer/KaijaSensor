; generated by Component: ARM Compiler 5.06 (build 20) Tool: ArmCC [4d35a4]
; commandline ArmCC [--c99 --split_sections --debug -c -S -ofw\lis3dh_driver.s --depend=fw\lis3dh_driver.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I../Inc -I../Drivers/STM32L1xx_HAL_Driver/Inc -I../Drivers/STM32L1xx_HAL_Driver/Inc/Legacy -I../Middlewares/Third_Party/FatFs/src/drivers -I../Middlewares/Third_Party/FatFs/src -I../Drivers/CMSIS/Include -I../Drivers/CMSIS/Device/ST/STM32L1xx/Include -IC:\Sensor\FW\MDK-ARM\RTE -IC:\Keil\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -IC:\Keil\ARM\PACK\Keil\STM32L1xx_DFP\1.0.2\Device\Include -D__MICROLIB -D__UVISION_VERSION=516 -D_RTE_ -DSTM32L1XX_HD -DUSE_HAL_DRIVER -DSTM32L151xD --omf_browse=fw\lis3dh_driver.crf ..\Src\lis3dh_driver.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.LIS3DH_FIFOModeEnable||, CODE, READONLY, ALIGN=1

LIS3DH_FIFOModeEnable PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        CMP      r4,#4
        BNE      |L0.94|
        MOV      r1,sp
        MOVS     r0,#0x2e
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L0.22|
        MOVS     r0,#0
|L0.20|
        POP      {r3-r5,pc}
|L0.22|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0x1f
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x2e
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L0.54|
        MOVS     r0,#0
        B        |L0.20|
|L0.54|
        MOV      r1,sp
        MOVS     r0,#0x24
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L0.68|
        MOVS     r0,#0
        B        |L0.20|
|L0.68|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0xbf
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x24
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L0.94|
        MOVS     r0,#0
        B        |L0.20|
|L0.94|
        CBNZ     r4,|L0.198|
        MOV      r1,sp
        MOVS     r0,#0x24
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L0.110|
        MOVS     r0,#0
        B        |L0.20|
|L0.110|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0xbf
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORR      r0,r0,#0x40
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x24
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L0.146|
        MOVS     r0,#0
        B        |L0.20|
|L0.146|
        MOV      r1,sp
        MOVS     r0,#0x2e
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L0.160|
        MOVS     r0,#0
        B        |L0.20|
|L0.160|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0x1f
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORR      r0,r0,r4,LSL #6
        UXTB     r0,r0
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x2e
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L0.198|
        MOVS     r0,#0
        B        |L0.20|
|L0.198|
        B        |L0.200|
|L0.200|
        CMP      r4,#1
        BNE      |L0.306|
        MOV      r1,sp
        MOVS     r0,#0x24
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L0.218|
        MOVS     r0,#0
        B        |L0.20|
|L0.218|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0xbf
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORR      r0,r0,#0x40
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x24
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L0.254|
        MOVS     r0,#0
        B        |L0.20|
|L0.254|
        MOV      r1,sp
        MOVS     r0,#0x2e
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L0.268|
        MOVS     r0,#0
        B        |L0.20|
|L0.268|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0x1f
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORR      r0,r0,r4,LSL #6
        UXTB     r0,r0
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x2e
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L0.306|
        MOVS     r0,#0
        B        |L0.20|
|L0.306|
        CMP      r4,#2
        BNE      |L0.412|
        MOV      r1,sp
        MOVS     r0,#0x24
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L0.324|
        MOVS     r0,#0
        B        |L0.20|
|L0.324|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0xbf
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORR      r0,r0,#0x40
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x24
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L0.360|
        MOVS     r0,#0
        B        |L0.20|
|L0.360|
        MOV      r1,sp
        MOVS     r0,#0x2e
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L0.374|
        MOVS     r0,#0
        B        |L0.20|
|L0.374|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0x1f
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORR      r0,r0,r4,LSL #6
        UXTB     r0,r0
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x2e
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L0.412|
        MOVS     r0,#0
        B        |L0.20|
|L0.412|
        CMP      r4,#3
        BNE      |L0.518|
        MOV      r1,sp
        MOVS     r0,#0x24
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L0.430|
        MOVS     r0,#0
        B        |L0.20|
|L0.430|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0xbf
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORR      r0,r0,#0x40
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x24
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L0.466|
        MOVS     r0,#0
        B        |L0.20|
|L0.466|
        MOV      r1,sp
        MOVS     r0,#0x2e
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L0.480|
        MOVS     r0,#0
        B        |L0.20|
|L0.480|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0x1f
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORR      r0,r0,r4,LSL #6
        UXTB     r0,r0
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x2e
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L0.518|
        MOVS     r0,#0
        B        |L0.20|
|L0.518|
        MOVS     r0,#1
        B        |L0.20|
        ENDP


        AREA ||i.LIS3DH_Get6DPosition||, CODE, READONLY, ALIGN=1

LIS3DH_Get6DPosition PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        MOV      r1,sp
        MOVS     r0,#0x31
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L1.18|
        MOVS     r0,#0
|L1.16|
        POP      {r3-r5,pc}
|L1.18|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0x7f
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        CMP      r0,#0x48
        BEQ      |L1.80|
        BGT      |L1.52|
        CMP      r0,#0x41
        BEQ      |L1.74|
        CMP      r0,#0x42
        BEQ      |L1.68|
        CMP      r0,#0x44
        BNE      |L1.98|
        B        |L1.62|
|L1.52|
        CMP      r0,#0x50
        BEQ      |L1.92|
        CMP      r0,#0x60
        BNE      |L1.98|
        B        |L1.86|
|L1.62|
        MOVS     r0,#0x44
        STRB     r0,[r4,#0]
        B        |L1.98|
|L1.68|
        MOVS     r0,#0x42
        STRB     r0,[r4,#0]
        B        |L1.98|
|L1.74|
        MOVS     r0,#0x41
        STRB     r0,[r4,#0]
        B        |L1.98|
|L1.80|
        MOVS     r0,#0x48
        STRB     r0,[r4,#0]
        B        |L1.98|
|L1.86|
        MOVS     r0,#0x60
        STRB     r0,[r4,#0]
        B        |L1.98|
|L1.92|
        MOVS     r0,#0x50
        STRB     r0,[r4,#0]
        NOP      
|L1.98|
        NOP      
        MOVS     r0,#1
        B        |L1.16|
        ENDP


        AREA ||i.LIS3DH_GetAccAxesRaw||, CODE, READONLY, ALIGN=1

LIS3DH_GetAccAxesRaw PROC
        PUSH     {r3-r7,lr}
        MOV      r4,r0
        MOV      r5,sp
        ADDS     r6,r5,#1
        MOV      r1,r5
        MOVS     r0,#0x28
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L2.22|
        MOVS     r0,#0
|L2.20|
        POP      {r3-r7,pc}
|L2.22|
        MOV      r1,r6
        MOVS     r0,#0x29
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L2.36|
        MOVS     r0,#0
        B        |L2.20|
|L2.36|
        LDRSH    r0,[sp,#0]
        STRH     r0,[r4,#0]
        MOV      r1,r5
        MOVS     r0,#0x2a
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L2.56|
        MOVS     r0,#0
        B        |L2.20|
|L2.56|
        MOV      r1,r6
        MOVS     r0,#0x2b
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L2.70|
        MOVS     r0,#0
        B        |L2.20|
|L2.70|
        LDRSH    r0,[sp,#0]
        STRH     r0,[r4,#2]
        MOV      r1,r5
        MOVS     r0,#0x2c
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L2.90|
        MOVS     r0,#0
        B        |L2.20|
|L2.90|
        MOV      r1,r6
        MOVS     r0,#0x2d
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L2.104|
        MOVS     r0,#0
        B        |L2.20|
|L2.104|
        LDRSH    r0,[sp,#0]
        STRH     r0,[r4,#4]
        MOVS     r0,#1
        B        |L2.20|
        ENDP


        AREA ||i.LIS3DH_GetAuxRaw||, CODE, READONLY, ALIGN=1

LIS3DH_GetAuxRaw PROC
        PUSH     {r2-r4,lr}
        MOV      r4,r0
        ADD      r1,sp,#4
        MOVS     r0,#8
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L3.18|
        MOVS     r0,#0
|L3.16|
        POP      {r2-r4,pc}
|L3.18|
        MOV      r1,sp
        MOVS     r0,#9
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L3.32|
        MOVS     r0,#0
        B        |L3.16|
|L3.32|
        LDRB     r1,[sp,#4]
        LDRB     r2,[sp,#0]
        ORR      r0,r1,r2,LSL #8
        ASRS     r1,r0,#31
        ADD      r1,r0,r1,LSR #28
        ASRS     r1,r1,#4
        STRH     r1,[r4,#0]
        ADD      r1,sp,#4
        MOVS     r0,#0xa
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L3.68|
        MOVS     r0,#0
        B        |L3.16|
|L3.68|
        MOV      r1,sp
        MOVS     r0,#0xb
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L3.82|
        MOVS     r0,#0
        B        |L3.16|
|L3.82|
        LDRB     r1,[sp,#4]
        LDRB     r2,[sp,#0]
        ORR      r0,r1,r2,LSL #8
        ASRS     r1,r0,#31
        ADD      r1,r0,r1,LSR #28
        ASRS     r1,r1,#4
        STRH     r1,[r4,#2]
        ADD      r1,sp,#4
        MOVS     r0,#0xc
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L3.118|
        MOVS     r0,#0
        B        |L3.16|
|L3.118|
        MOV      r1,sp
        MOVS     r0,#0xd
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L3.132|
        MOVS     r0,#0
        B        |L3.16|
|L3.132|
        LDRB     r1,[sp,#4]
        LDRB     r2,[sp,#0]
        ORR      r0,r1,r2,LSL #8
        ASRS     r1,r0,#31
        ADD      r1,r0,r1,LSR #28
        ASRS     r1,r1,#4
        STRH     r1,[r4,#4]
        MOVS     r0,#1
        B        |L3.16|
        ENDP


        AREA ||i.LIS3DH_GetClickResponse||, CODE, READONLY, ALIGN=1

LIS3DH_GetClickResponse PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        MOV      r1,sp
        MOVS     r0,#0x39
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L4.18|
        MOVS     r0,#0
|L4.16|
        POP      {r3-r5,pc}
|L4.18|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0x7f
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0x40
        CBNZ     r0,|L4.46|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L4.16|
|L4.46|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0x20
        CBZ      r0,|L4.158|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#8
        CBZ      r0,|L4.122|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#4
        CBZ      r0,|L4.84|
        MOVS     r0,#0x2c
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L4.16|
|L4.84|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#2
        CBZ      r0,|L4.102|
        MOVS     r0,#0x2a
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L4.16|
|L4.102|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#1
        CMP      r0,#0
        BEQ      |L4.298|
        MOVS     r0,#0x29
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L4.16|
|L4.122|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#4
        CBZ      r0,|L4.140|
        MOVS     r0,#0x24
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L4.16|
|L4.140|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#2
        CBZ      r0,|L4.160|
        MOVS     r0,#0x22
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L4.16|
|L4.158|
        B        |L4.178|
|L4.160|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#1
        CBZ      r0,|L4.278|
        MOVS     r0,#0x21
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L4.16|
|L4.178|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#8
        CBZ      r0,|L4.242|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#4
        CBZ      r0,|L4.206|
        MOVS     r0,#0x1c
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L4.16|
|L4.206|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#2
        CBZ      r0,|L4.224|
        MOVS     r0,#0x1a
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L4.16|
|L4.224|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#1
        CBZ      r0,|L4.278|
        MOVS     r0,#0x19
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L4.16|
|L4.242|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#4
        CBZ      r0,|L4.260|
        MOVS     r0,#0x14
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L4.16|
|L4.260|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#2
        CBZ      r0,|L4.280|
        MOVS     r0,#0x12
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L4.16|
|L4.278|
        B        |L4.298|
|L4.280|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#1
        CBZ      r0,|L4.298|
        MOVS     r0,#0x11
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L4.16|
|L4.298|
        MOVS     r0,#0
        B        |L4.16|
        ENDP


        AREA ||i.LIS3DH_GetFifoSourceBit||, CODE, READONLY, ALIGN=1

LIS3DH_GetFifoSourceBit PROC
        PUSH     {r3-r5,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r1,sp
        MOVS     r0,#0x2f
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L5.20|
        MOVS     r0,#0
|L5.18|
        POP      {r3-r5,pc}
|L5.20|
        CMP      r5,#0x80
        BNE      |L5.50|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0x80
        STR      r0,[sp,#0]
        CBZ      r0,|L5.42|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L5.18|
|L5.42|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L5.18|
|L5.50|
        CMP      r5,#0x40
        BNE      |L5.80|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0x40
        STR      r0,[sp,#0]
        CBZ      r0,|L5.72|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L5.18|
|L5.72|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L5.18|
|L5.80|
        CMP      r5,#0x20
        BNE      |L5.116|
        BNE      |L5.90|
        MOVS     r0,#1
        B        |L5.92|
|L5.90|
        MOVS     r0,#0
|L5.92|
        LDRB     r1,[sp,#0]
        ANDS     r0,r0,r1
        STR      r0,[sp,#0]
        CBZ      r0,|L5.108|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L5.18|
|L5.108|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L5.18|
|L5.116|
        MOVS     r0,#0
        B        |L5.18|
        ENDP


        AREA ||i.LIS3DH_GetFifoSourceFSS||, CODE, READONLY, ALIGN=1

LIS3DH_GetFifoSourceFSS PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        MOV      r1,sp
        MOVS     r0,#0x2f
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L6.18|
        MOVS     r0,#0
|L6.16|
        POP      {r3-r5,pc}
|L6.18|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0x1f
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L6.16|
        ENDP


        AREA ||i.LIS3DH_GetFifoSourceReg||, CODE, READONLY, ALIGN=1

LIS3DH_GetFifoSourceReg PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        MOV      r1,r4
        MOVS     r0,#0x2f
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L7.18|
        MOVS     r0,#0
|L7.16|
        POP      {r4,pc}
|L7.18|
        MOVS     r0,#1
        B        |L7.16|
        ENDP


        AREA ||i.LIS3DH_GetInt1Src||, CODE, READONLY, ALIGN=1

LIS3DH_GetInt1Src PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        MOV      r1,r4
        MOVS     r0,#0x31
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L8.18|
        MOVS     r0,#0
|L8.16|
        POP      {r4,pc}
|L8.18|
        MOVS     r0,#1
        B        |L8.16|
        ENDP


        AREA ||i.LIS3DH_GetInt1SrcBit||, CODE, READONLY, ALIGN=1

LIS3DH_GetInt1SrcBit PROC
        PUSH     {r3-r5,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r1,sp
        MOVS     r0,#0x31
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L9.20|
        MOVS     r0,#0
|L9.18|
        POP      {r3-r5,pc}
|L9.20|
        CMP      r5,#0x40
        BNE      |L9.50|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0x40
        STR      r0,[sp,#0]
        CBZ      r0,|L9.42|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L9.18|
|L9.42|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L9.18|
|L9.50|
        CMP      r5,#0x20
        BNE      |L9.80|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0x20
        STR      r0,[sp,#0]
        CBZ      r0,|L9.72|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L9.18|
|L9.72|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L9.18|
|L9.80|
        CMP      r5,#0x10
        BNE      |L9.110|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0x10
        STR      r0,[sp,#0]
        CBZ      r0,|L9.102|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L9.18|
|L9.102|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L9.18|
|L9.110|
        CMP      r5,#8
        BNE      |L9.140|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#8
        STR      r0,[sp,#0]
        CBZ      r0,|L9.132|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L9.18|
|L9.132|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L9.18|
|L9.140|
        CMP      r5,#4
        BNE      |L9.170|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#4
        STR      r0,[sp,#0]
        CBZ      r0,|L9.162|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L9.18|
|L9.162|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L9.18|
|L9.170|
        CMP      r5,#2
        BNE      |L9.200|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#2
        STR      r0,[sp,#0]
        CBZ      r0,|L9.192|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L9.18|
|L9.192|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L9.18|
|L9.200|
        CMP      r5,#1
        BNE      |L9.230|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#1
        STR      r0,[sp,#0]
        CBZ      r0,|L9.222|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L9.18|
|L9.222|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L9.18|
|L9.230|
        MOVS     r0,#0
        B        |L9.18|
        ENDP


        AREA ||i.LIS3DH_GetIntCounter||, CODE, READONLY, ALIGN=1

LIS3DH_GetIntCounter PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        MOV      r1,r4
        MOVS     r0,#0xe
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L10.18|
        MOVS     r0,#0
|L10.16|
        POP      {r4,pc}
|L10.18|
        MOVS     r0,#1
        B        |L10.16|
        ENDP


        AREA ||i.LIS3DH_GetReg3Bit||, CODE, READONLY, ALIGN=1

LIS3DH_GetReg3Bit PROC
        PUSH     {r3-r5,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r1,sp
        MOVS     r0,#0x22
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L11.20|
        MOVS     r0,#0
|L11.18|
        POP      {r3-r5,pc}
|L11.20|
        CMP      r5,#8
        BCS      |L11.218|
        TBB      [pc,r5]
        DCB      0x5f,0x52,0x45,0x38
        DCB      0x2b,0x1e,0x11,0x04
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0x80
        STR      r0,[sp,#0]
        CBZ      r0,|L11.54|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L11.18|
|L11.54|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L11.18|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0x40
        STR      r0,[sp,#0]
        CBZ      r0,|L11.80|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L11.18|
|L11.80|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L11.18|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0x20
        STR      r0,[sp,#0]
        CBZ      r0,|L11.106|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L11.18|
|L11.106|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L11.18|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0x10
        STR      r0,[sp,#0]
        CBZ      r0,|L11.132|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L11.18|
|L11.132|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L11.18|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#8
        STR      r0,[sp,#0]
        CBZ      r0,|L11.158|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L11.18|
|L11.158|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L11.18|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#4
        STR      r0,[sp,#0]
        CBZ      r0,|L11.184|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L11.18|
|L11.184|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L11.18|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#2
        STR      r0,[sp,#0]
        CBZ      r0,|L11.210|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L11.18|
|L11.210|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L11.18|
|L11.218|
        MOVS     r0,#0
        B        |L11.18|
        ENDP


        AREA ||i.LIS3DH_GetStatusAUX||, CODE, READONLY, ALIGN=1

LIS3DH_GetStatusAUX PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        MOV      r1,r4
        MOVS     r0,#7
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L12.18|
        MOVS     r0,#0
|L12.16|
        POP      {r4,pc}
|L12.18|
        MOVS     r0,#1
        B        |L12.16|
        ENDP


        AREA ||i.LIS3DH_GetStatusAUXBit||, CODE, READONLY, ALIGN=1

LIS3DH_GetStatusAUXBit PROC
        PUSH     {r3-r5,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r1,sp
        MOVS     r0,#7
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L13.20|
        MOVS     r0,#0
|L13.18|
        POP      {r3-r5,pc}
|L13.20|
        CMP      r5,#0x80
        BNE      |L13.50|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0x80
        STR      r0,[sp,#0]
        CBZ      r0,|L13.42|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L13.18|
|L13.42|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L13.18|
|L13.50|
        CMP      r5,#0x40
        BNE      |L13.80|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0x40
        STR      r0,[sp,#0]
        CBZ      r0,|L13.72|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L13.18|
|L13.72|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L13.18|
|L13.80|
        CMP      r5,#0x20
        BNE      |L13.110|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0x20
        STR      r0,[sp,#0]
        CBZ      r0,|L13.102|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L13.18|
|L13.102|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L13.18|
|L13.110|
        CMP      r5,#0x10
        BNE      |L13.140|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0x10
        STR      r0,[sp,#0]
        CBZ      r0,|L13.132|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L13.18|
|L13.132|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L13.18|
|L13.140|
        CMP      r5,#8
        BNE      |L13.170|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#8
        STR      r0,[sp,#0]
        CBZ      r0,|L13.162|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L13.18|
|L13.162|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L13.18|
|L13.170|
        CMP      r5,#4
        BNE      |L13.200|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#4
        STR      r0,[sp,#0]
        CBZ      r0,|L13.192|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L13.18|
|L13.192|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L13.18|
|L13.200|
        CMP      r5,#2
        BNE      |L13.230|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#2
        STR      r0,[sp,#0]
        CBZ      r0,|L13.222|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L13.18|
|L13.222|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L13.18|
|L13.230|
        CMP      r5,#1
        BNE      |L13.260|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#1
        STR      r0,[sp,#0]
        CBZ      r0,|L13.252|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L13.18|
|L13.252|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L13.18|
|L13.260|
        MOVS     r0,#0
        B        |L13.18|
        ENDP


        AREA ||i.LIS3DH_GetStatusBit||, CODE, READONLY, ALIGN=1

LIS3DH_GetStatusBit PROC
        PUSH     {r3-r5,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r1,sp
        MOVS     r0,#0x27
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L14.20|
        MOVS     r0,#0
|L14.18|
        POP      {r3-r5,pc}
|L14.20|
        CMP      r5,#0x10
        BEQ      |L14.134|
        BGT      |L14.44|
        CMP      r5,#1
        BEQ      |L14.238|
        CMP      r5,#2
        BEQ      |L14.212|
        CMP      r5,#4
        BEQ      |L14.186|
        CMP      r5,#8
        BNE      |L14.264|
        B        |L14.160|
|L14.44|
        CMP      r5,#0x20
        BEQ      |L14.108|
        CMP      r5,#0x40
        BEQ      |L14.82|
        CMP      r5,#0x80
        BNE      |L14.264|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0x80
        STR      r0,[sp,#0]
        CBZ      r0,|L14.74|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L14.18|
|L14.74|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L14.18|
|L14.82|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0x40
        STR      r0,[sp,#0]
        CBZ      r0,|L14.100|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L14.18|
|L14.100|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L14.18|
|L14.108|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0x20
        STR      r0,[sp,#0]
        CBZ      r0,|L14.126|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L14.18|
|L14.126|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L14.18|
|L14.134|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0x10
        STR      r0,[sp,#0]
        CBZ      r0,|L14.152|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L14.18|
|L14.152|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L14.18|
|L14.160|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#8
        STR      r0,[sp,#0]
        CBZ      r0,|L14.178|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L14.18|
|L14.178|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L14.18|
|L14.186|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#4
        STR      r0,[sp,#0]
        CBZ      r0,|L14.204|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L14.18|
|L14.204|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L14.18|
|L14.212|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#2
        STR      r0,[sp,#0]
        CBZ      r0,|L14.230|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L14.18|
|L14.230|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L14.18|
|L14.238|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#1
        STR      r0,[sp,#0]
        CBZ      r0,|L14.256|
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        B        |L14.18|
|L14.256|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L14.18|
|L14.264|
        MOVS     r0,#0
        B        |L14.18|
        ENDP


        AREA ||i.LIS3DH_GetStatusReg||, CODE, READONLY, ALIGN=1

LIS3DH_GetStatusReg PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        MOV      r1,r4
        MOVS     r0,#0x27
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L15.18|
        MOVS     r0,#0
|L15.16|
        POP      {r4,pc}
|L15.18|
        MOVS     r0,#1
        B        |L15.16|
        ENDP


        AREA ||i.LIS3DH_GetTempRaw||, CODE, READONLY, ALIGN=1

LIS3DH_GetTempRaw PROC
        PUSH     {r2-r4,lr}
        MOV      r4,r0
        ADD      r1,sp,#4
        MOVS     r0,#0xc
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L16.18|
        MOVS     r0,#0
|L16.16|
        POP      {r2-r4,pc}
|L16.18|
        MOV      r1,sp
        MOVS     r0,#0xd
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L16.32|
        MOVS     r0,#0
        B        |L16.16|
|L16.32|
        LDRB     r0,[sp,#0]
        SXTB     r0,r0
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        B        |L16.16|
        ENDP


        AREA ||i.LIS3DH_GetWHO_AM_I||, CODE, READONLY, ALIGN=1

LIS3DH_GetWHO_AM_I PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        MOV      r1,r4
        MOVS     r0,#0xf
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L17.18|
        MOVS     r0,#0
|L17.16|
        POP      {r4,pc}
|L17.18|
        MOVS     r0,#1
        B        |L17.16|
        ENDP


        AREA ||i.LIS3DH_HPFAOI1Enable||, CODE, READONLY, ALIGN=1

LIS3DH_HPFAOI1Enable PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        MOV      r1,sp
        MOVS     r0,#0x21
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L18.18|
        MOVS     r0,#0
|L18.16|
        POP      {r3-r5,pc}
|L18.18|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0xfe
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORRS     r0,r0,r4
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x21
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L18.52|
        MOVS     r0,#0
        B        |L18.16|
|L18.52|
        MOVS     r0,#1
        B        |L18.16|
        ENDP


        AREA ||i.LIS3DH_HPFAOI2Enable||, CODE, READONLY, ALIGN=1

LIS3DH_HPFAOI2Enable PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        MOV      r1,sp
        MOVS     r0,#0x21
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L19.18|
        MOVS     r0,#0
|L19.16|
        POP      {r3-r5,pc}
|L19.18|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0xfd
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORR      r0,r0,r4,LSL #1
        UXTB     r0,r0
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x21
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L19.56|
        MOVS     r0,#0
        B        |L19.16|
|L19.56|
        MOVS     r0,#1
        B        |L19.16|
        ENDP


        AREA ||i.LIS3DH_HPFClickEnable||, CODE, READONLY, ALIGN=1

LIS3DH_HPFClickEnable PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        MOV      r1,sp
        MOVS     r0,#0x21
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L20.18|
        MOVS     r0,#0
|L20.16|
        POP      {r3-r5,pc}
|L20.18|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0xfb
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORR      r0,r0,r4,LSL #2
        UXTB     r0,r0
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x21
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L20.56|
        MOVS     r0,#0
        B        |L20.16|
|L20.56|
        MOVS     r0,#1
        B        |L20.16|
        ENDP


        AREA ||i.LIS3DH_Int1LatchEnable||, CODE, READONLY, ALIGN=1

LIS3DH_Int1LatchEnable PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        MOV      r1,sp
        MOVS     r0,#0x24
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L21.18|
        MOVS     r0,#0
|L21.16|
        POP      {r3-r5,pc}
|L21.18|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0xf7
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORR      r0,r0,r4,LSL #3
        UXTB     r0,r0
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x24
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L21.56|
        MOVS     r0,#0
        B        |L21.16|
|L21.56|
        MOVS     r0,#1
        B        |L21.16|
        ENDP


        AREA ||i.LIS3DH_ReadReg||, CODE, READONLY, ALIGN=2

LIS3DH_ReadReg PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOVS     r0,#0
        STR      r0,[sp,#0]
        MOVS     r2,#0
        MOVS     r1,#0x10
        LDR      r0,|L22.80|
        BL       HAL_GPIO_WritePin
        MOVS     r0,#1
        BL       HAL_Delay
        ORR      r4,r4,#0x80
        STR      r4,[sp,#0]
        MOV      r3,#0x1000
        MOVS     r2,#1
        MOV      r1,sp
        LDR      r0,|L22.84|
        BL       HAL_SPI_Transmit
        MOV      r3,#0x1000
        MOVS     r2,#4
        MOV      r1,r5
        LDR      r0,|L22.84|
        BL       HAL_SPI_Receive
        MOVS     r2,#1
        MOVS     r1,#0x10
        LDR      r0,|L22.80|
        BL       HAL_GPIO_WritePin
        MOVS     r0,#1
        BL       HAL_Delay
        MOVS     r0,#1
        POP      {r3-r5,pc}
        ENDP

|L22.80|
        DCD      0x40020000
|L22.84|
        DCD      hspi1

        AREA ||i.LIS3DH_Reboot||, CODE, READONLY, ALIGN=1

LIS3DH_Reboot PROC
        PUSH     {r3,lr}
        MOV      r1,sp
        MOVS     r0,#0x24
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L23.16|
        MOVS     r0,#0
|L23.14|
        POP      {r3,pc}
|L23.16|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0xf7
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORR      r0,r0,#0x80
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x24
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L23.52|
        MOVS     r0,#0
        B        |L23.14|
|L23.52|
        MOVS     r0,#1
        B        |L23.14|
        ENDP


        AREA ||i.LIS3DH_ResetInt1Latch||, CODE, READONLY, ALIGN=1

LIS3DH_ResetInt1Latch PROC
        PUSH     {r3,lr}
        MOV      r1,sp
        MOVS     r0,#0x31
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L24.16|
        MOVS     r0,#0
|L24.14|
        POP      {r3,pc}
|L24.16|
        MOVS     r0,#1
        B        |L24.14|
        ENDP


        AREA ||i.LIS3DH_SetADCAux||, CODE, READONLY, ALIGN=1

LIS3DH_SetADCAux PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        MOV      r1,sp
        MOVS     r0,#0x1f
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L25.18|
        MOVS     r0,#0
|L25.16|
        POP      {r3-r5,pc}
|L25.18|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0x7f
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORR      r0,r0,r4,LSL #7
        UXTB     r0,r0
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x1f
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L25.56|
        MOVS     r0,#0
        B        |L25.16|
|L25.56|
        MOVS     r0,#1
        B        |L25.16|
        ENDP


        AREA ||i.LIS3DH_SetAxis||, CODE, READONLY, ALIGN=1

LIS3DH_SetAxis PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        MOV      r1,sp
        MOVS     r0,#0x20
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L26.18|
        MOVS     r0,#0
|L26.16|
        POP      {r3-r5,pc}
|L26.18|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0xf8
        STR      r0,[sp,#0]
        AND      r0,r4,#7
        LDRB     r1,[sp,#0]
        ORRS     r0,r0,r1
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x20
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L26.56|
        MOVS     r0,#0
        B        |L26.16|
|L26.56|
        MOVS     r0,#1
        B        |L26.16|
        ENDP


        AREA ||i.LIS3DH_SetBDU||, CODE, READONLY, ALIGN=1

LIS3DH_SetBDU PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        MOV      r1,sp
        MOVS     r0,#0x23
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L27.18|
        MOVS     r0,#0
|L27.16|
        POP      {r3-r5,pc}
|L27.18|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0x7f
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORR      r0,r0,r4,LSL #7
        UXTB     r0,r0
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x23
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L27.56|
        MOVS     r0,#0
        B        |L27.16|
|L27.56|
        MOVS     r0,#1
        B        |L27.16|
        ENDP


        AREA ||i.LIS3DH_SetBLE||, CODE, READONLY, ALIGN=1

LIS3DH_SetBLE PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        MOV      r1,sp
        MOVS     r0,#0x23
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L28.18|
        MOVS     r0,#0
|L28.16|
        POP      {r3-r5,pc}
|L28.18|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0xbf
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORR      r0,r0,r4,LSL #6
        UXTB     r0,r0
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x23
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L28.56|
        MOVS     r0,#0
        B        |L28.16|
|L28.56|
        MOVS     r0,#1
        B        |L28.16|
        ENDP


        AREA ||i.LIS3DH_SetClickCFG||, CODE, READONLY, ALIGN=1

LIS3DH_SetClickCFG PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        MOV      r1,sp
        MOVS     r0,#0x38
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L29.18|
        MOVS     r0,#0
|L29.16|
        POP      {r3-r5,pc}
|L29.18|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0xc0
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORRS     r0,r0,r4
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x38
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L29.52|
        MOVS     r0,#0
        B        |L29.16|
|L29.52|
        MOVS     r0,#1
        B        |L29.16|
        ENDP


        AREA ||i.LIS3DH_SetClickLATENCY||, CODE, READONLY, ALIGN=1

LIS3DH_SetClickLATENCY PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        MOV      r1,r4
        MOVS     r0,#0x3c
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L30.18|
        MOVS     r0,#0
|L30.16|
        POP      {r4,pc}
|L30.18|
        MOVS     r0,#1
        B        |L30.16|
        ENDP


        AREA ||i.LIS3DH_SetClickLIMIT||, CODE, READONLY, ALIGN=1

LIS3DH_SetClickLIMIT PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        CMP      r4,#0x7f
        BLE      |L31.12|
        MOVS     r0,#0
|L31.10|
        POP      {r4,pc}
|L31.12|
        MOV      r1,r4
        MOVS     r0,#0x3b
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L31.26|
        MOVS     r0,#0
        B        |L31.10|
|L31.26|
        MOVS     r0,#1
        B        |L31.10|
        ENDP


        AREA ||i.LIS3DH_SetClickTHS||, CODE, READONLY, ALIGN=1

LIS3DH_SetClickTHS PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        CMP      r4,#0x7f
        BLE      |L32.12|
        MOVS     r0,#0
|L32.10|
        POP      {r4,pc}
|L32.12|
        MOV      r1,r4
        MOVS     r0,#0x3a
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L32.26|
        MOVS     r0,#0
        B        |L32.10|
|L32.26|
        MOVS     r0,#1
        B        |L32.10|
        ENDP


        AREA ||i.LIS3DH_SetClickWINDOW||, CODE, READONLY, ALIGN=1

LIS3DH_SetClickWINDOW PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        MOV      r1,r4
        MOVS     r0,#0x3d
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L33.18|
        MOVS     r0,#0
|L33.16|
        POP      {r4,pc}
|L33.18|
        MOVS     r0,#1
        B        |L33.16|
        ENDP


        AREA ||i.LIS3DH_SetFilterDataSel||, CODE, READONLY, ALIGN=1

LIS3DH_SetFilterDataSel PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        MOV      r1,sp
        MOVS     r0,#0x21
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L34.18|
        MOVS     r0,#0
|L34.16|
        POP      {r3-r5,pc}
|L34.18|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0xf7
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORR      r0,r0,r4,LSL #3
        UXTB     r0,r0
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x21
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L34.56|
        MOVS     r0,#0
        B        |L34.16|
|L34.56|
        MOVS     r0,#1
        B        |L34.16|
        ENDP


        AREA ||i.LIS3DH_SetFullScale||, CODE, READONLY, ALIGN=1

LIS3DH_SetFullScale PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        MOV      r1,sp
        MOVS     r0,#0x23
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L35.18|
        MOVS     r0,#0
|L35.16|
        POP      {r3-r5,pc}
|L35.18|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0xcf
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORR      r0,r0,r4,LSL #4
        UXTB     r0,r0
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x23
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L35.56|
        MOVS     r0,#0
        B        |L35.16|
|L35.56|
        MOVS     r0,#1
        B        |L35.16|
        ENDP


        AREA ||i.LIS3DH_SetHPFCutOFF||, CODE, READONLY, ALIGN=1

LIS3DH_SetHPFCutOFF PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        CMP      r4,#3
        BLE      |L36.12|
        MOVS     r0,#0
|L36.10|
        POP      {r3-r5,pc}
|L36.12|
        MOV      r1,sp
        MOVS     r0,#0x21
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L36.26|
        MOVS     r0,#0
        B        |L36.10|
|L36.26|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0xcf
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORR      r0,r0,r4,LSL #4
        UXTB     r0,r0
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x21
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L36.64|
        MOVS     r0,#0
        B        |L36.10|
|L36.64|
        MOVS     r0,#1
        B        |L36.10|
        ENDP


        AREA ||i.LIS3DH_SetHPFMode||, CODE, READONLY, ALIGN=1

LIS3DH_SetHPFMode PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        MOV      r1,sp
        MOVS     r0,#0x21
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L37.18|
        MOVS     r0,#0
|L37.16|
        POP      {r3-r5,pc}
|L37.18|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0x3f
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORR      r0,r0,r4,LSL #6
        UXTB     r0,r0
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x21
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L37.56|
        MOVS     r0,#0
        B        |L37.16|
|L37.56|
        MOVS     r0,#1
        B        |L37.16|
        ENDP


        AREA ||i.LIS3DH_SetInt1Duration||, CODE, READONLY, ALIGN=1

LIS3DH_SetInt1Duration PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        CMP      r4,#0x7f
        BLE      |L38.12|
        MOVS     r0,#0
|L38.10|
        POP      {r4,pc}
|L38.12|
        MOV      r1,r4
        MOVS     r0,#0x33
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L38.26|
        MOVS     r0,#0
        B        |L38.10|
|L38.26|
        MOVS     r0,#1
        B        |L38.10|
        ENDP


        AREA ||i.LIS3DH_SetInt1Pin||, CODE, READONLY, ALIGN=1

LIS3DH_SetInt1Pin PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        MOV      r1,sp
        MOVS     r0,#0x22
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L39.18|
        MOVS     r0,#0
|L39.16|
        POP      {r3-r5,pc}
|L39.18|
        MOVS     r0,#0
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORRS     r0,r0,r4
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x22
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L39.46|
        MOVS     r0,#0
        B        |L39.16|
|L39.46|
        MOVS     r0,#1
        B        |L39.16|
        ENDP


        AREA ||i.LIS3DH_SetInt1Threshold||, CODE, READONLY, ALIGN=1

LIS3DH_SetInt1Threshold PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        CMP      r4,#0x7f
        BLE      |L40.12|
        MOVS     r0,#0
|L40.10|
        POP      {r4,pc}
|L40.12|
        MOV      r1,r4
        MOVS     r0,#0x32
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L40.26|
        MOVS     r0,#0
        B        |L40.10|
|L40.26|
        MOVS     r0,#1
        B        |L40.10|
        ENDP


        AREA ||i.LIS3DH_SetInt2Pin||, CODE, READONLY, ALIGN=1

LIS3DH_SetInt2Pin PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        MOV      r1,sp
        MOVS     r0,#0x25
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L41.18|
        MOVS     r0,#0
|L41.16|
        POP      {r3-r5,pc}
|L41.18|
        MOVS     r0,#0
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORRS     r0,r0,r4
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x25
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L41.46|
        MOVS     r0,#0
        B        |L41.16|
|L41.46|
        MOVS     r0,#1
        B        |L41.16|
        ENDP


        AREA ||i.LIS3DH_SetInt6D4DConfiguration||, CODE, READONLY, ALIGN=1

LIS3DH_SetInt6D4DConfiguration PROC
        PUSH     {r2-r4,lr}
        MOV      r4,r0
        ADD      r1,sp,#4
        MOVS     r0,#0x30
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L42.18|
        MOVS     r0,#0
|L42.16|
        POP      {r2-r4,pc}
|L42.18|
        MOV      r1,sp
        MOVS     r0,#0x24
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L42.32|
        MOVS     r0,#0
        B        |L42.16|
|L42.32|
        CMP      r4,#1
        BNE      |L42.72|
        LDRB     r0,[sp,#4]
        AND      r0,r0,#0xbf
        STR      r0,[sp,#4]
        LDRB     r0,[sp,#4]
        ORR      r0,r0,#0x40
        STR      r0,[sp,#4]
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0xfb
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        STR      r0,[sp,#0]
|L42.72|
        CMP      r4,#2
        BNE      |L42.116|
        LDRB     r0,[sp,#4]
        AND      r0,r0,#0xbf
        STR      r0,[sp,#4]
        LDRB     r0,[sp,#4]
        ORR      r0,r0,#0x40
        STR      r0,[sp,#4]
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0xfb
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORR      r0,r0,#4
        STR      r0,[sp,#0]
|L42.116|
        CBNZ     r4,|L42.150|
        LDRB     r0,[sp,#4]
        AND      r0,r0,#0xbf
        STR      r0,[sp,#4]
        LDRB     r0,[sp,#4]
        STR      r0,[sp,#4]
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0xfb
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        STR      r0,[sp,#0]
|L42.150|
        LDRB     r1,[sp,#4]
        MOVS     r0,#0x30
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L42.166|
        MOVS     r0,#0
        B        |L42.16|
|L42.166|
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x24
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L42.182|
        MOVS     r0,#0
        B        |L42.16|
|L42.182|
        MOVS     r0,#1
        B        |L42.16|
        ENDP


        AREA ||i.LIS3DH_SetIntConfiguration||, CODE, READONLY, ALIGN=1

LIS3DH_SetIntConfiguration PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        MOV      r1,sp
        MOVS     r0,#0x30
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L43.18|
        MOVS     r0,#0
|L43.16|
        POP      {r3-r5,pc}
|L43.18|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0x40
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORRS     r0,r0,r4
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x30
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L43.52|
        MOVS     r0,#0
        B        |L43.16|
|L43.52|
        MOVS     r0,#1
        B        |L43.16|
        ENDP


        AREA ||i.LIS3DH_SetIntMode||, CODE, READONLY, ALIGN=1

LIS3DH_SetIntMode PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        MOV      r1,sp
        MOVS     r0,#0x30
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L44.18|
        MOVS     r0,#0
|L44.16|
        POP      {r3-r5,pc}
|L44.18|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0x3f
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORR      r0,r0,r4,LSL #6
        UXTB     r0,r0
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x30
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L44.56|
        MOVS     r0,#0
        B        |L44.16|
|L44.56|
        MOVS     r0,#1
        B        |L44.16|
        ENDP


        AREA ||i.LIS3DH_SetMode||, CODE, READONLY, ALIGN=2

LIS3DH_SetMode PROC
        PUSH     {r2-r4,lr}
        MOV      r4,r0
        ADD      r1,sp,#4
        MOVS     r0,#0x20
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L45.18|
        MOVS     r0,#0
|L45.16|
        POP      {r2-r4,pc}
|L45.18|
        MOV      r1,sp
        MOVS     r0,#0x23
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L45.32|
        MOVS     r0,#0
        B        |L45.16|
|L45.32|
        LDRB     r0,[sp,#4]
        AND      r0,r0,#0xf0
        CBNZ     r0,|L45.58|
        LDR      r0,|L45.208|
        LDRB     r0,[r0,#0]  ; ODR_old_value
        AND      r0,r0,#0xf0
        LDRB     r1,[sp,#4]
        ORRS     r0,r0,r1
        STR      r0,[sp,#4]
|L45.58|
        CBZ      r4,|L45.70|
        CMP      r4,#1
        BEQ      |L45.128|
        CMP      r4,#2
        BNE      |L45.166|
        B        |L45.90|
|L45.70|
        LDRB     r0,[sp,#4]
        LDR      r1,|L45.208|
        STRB     r0,[r1,#0]
        LDRB     r0,[sp,#4]
        AND      r0,r0,#0xf
        STR      r0,[sp,#4]
        B        |L45.170|
|L45.90|
        LDRB     r0,[sp,#4]
        AND      r0,r0,#0xf7
        STR      r0,[sp,#4]
        LDRB     r0,[sp,#4]
        STR      r0,[sp,#4]
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0xf7
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORR      r0,r0,#8
        STR      r0,[sp,#0]
        B        |L45.170|
|L45.128|
        LDRB     r0,[sp,#4]
        AND      r0,r0,#0xf7
        STR      r0,[sp,#4]
        LDRB     r0,[sp,#4]
        ORR      r0,r0,#8
        STR      r0,[sp,#4]
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0xf7
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        STR      r0,[sp,#0]
        B        |L45.170|
|L45.166|
        MOVS     r0,#0
        B        |L45.16|
|L45.170|
        NOP      
        LDRB     r1,[sp,#4]
        MOVS     r0,#0x20
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L45.188|
        MOVS     r0,#0
        B        |L45.16|
|L45.188|
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x23
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L45.204|
        MOVS     r0,#0
        B        |L45.16|
|L45.204|
        MOVS     r0,#1
        B        |L45.16|
        ENDP

|L45.208|
        DCD      ODR_old_value

        AREA ||i.LIS3DH_SetODR||, CODE, READONLY, ALIGN=1

LIS3DH_SetODR PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        MOV      r1,sp
        MOVS     r0,#0x20
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L46.18|
        MOVS     r0,#0
|L46.16|
        POP      {r3-r5,pc}
|L46.18|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0xf
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORR      r0,r0,r4,LSL #4
        UXTB     r0,r0
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x20
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L46.56|
        MOVS     r0,#0
        B        |L46.16|
|L46.56|
        MOVS     r0,#1
        B        |L46.16|
        ENDP


        AREA ||i.LIS3DH_SetSPIInterface||, CODE, READONLY, ALIGN=1

LIS3DH_SetSPIInterface PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        MOV      r1,sp
        MOVS     r0,#0x23
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L47.18|
        MOVS     r0,#0
|L47.16|
        POP      {r3-r5,pc}
|L47.18|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0xfe
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORRS     r0,r0,r4
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x23
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L47.52|
        MOVS     r0,#0
        B        |L47.16|
|L47.52|
        MOVS     r0,#1
        B        |L47.16|
        ENDP


        AREA ||i.LIS3DH_SetSelfTest||, CODE, READONLY, ALIGN=1

LIS3DH_SetSelfTest PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        MOV      r1,sp
        MOVS     r0,#0x23
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L48.18|
        MOVS     r0,#0
|L48.16|
        POP      {r3-r5,pc}
|L48.18|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0xf9
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORR      r0,r0,r4,LSL #1
        UXTB     r0,r0
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x23
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L48.56|
        MOVS     r0,#0
        B        |L48.16|
|L48.56|
        MOVS     r0,#1
        B        |L48.16|
        ENDP


        AREA ||i.LIS3DH_SetTemperature||, CODE, READONLY, ALIGN=1

LIS3DH_SetTemperature PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        MOV      r1,sp
        MOVS     r0,#0x1f
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L49.18|
        MOVS     r0,#0
|L49.16|
        POP      {r3-r5,pc}
|L49.18|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0xbf
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORR      r0,r0,r4,LSL #6
        UXTB     r0,r0
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x1f
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L49.56|
        MOVS     r0,#0
        B        |L49.16|
|L49.56|
        MOVS     r0,#1
        B        |L49.16|
        ENDP


        AREA ||i.LIS3DH_SetTriggerInt||, CODE, READONLY, ALIGN=1

LIS3DH_SetTriggerInt PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        MOV      r1,sp
        MOVS     r0,#0x2e
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L50.18|
        MOVS     r0,#0
|L50.16|
        POP      {r3-r5,pc}
|L50.18|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0xdf
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORR      r0,r0,r4,LSL #5
        UXTB     r0,r0
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x2e
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L50.56|
        MOVS     r0,#0
        B        |L50.16|
|L50.56|
        MOVS     r0,#1
        B        |L50.16|
        ENDP


        AREA ||i.LIS3DH_SetWaterMark||, CODE, READONLY, ALIGN=1

LIS3DH_SetWaterMark PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        CMP      r4,#0x1f
        BLE      |L51.12|
        MOVS     r0,#0
|L51.10|
        POP      {r3-r5,pc}
|L51.12|
        MOV      r1,sp
        MOVS     r0,#0x2e
        BL       LIS3DH_ReadReg
        CBNZ     r0,|L51.26|
        MOVS     r0,#0
        B        |L51.10|
|L51.26|
        LDRB     r0,[sp,#0]
        AND      r0,r0,#0xe0
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ORRS     r0,r0,r4
        STR      r0,[sp,#0]
        LDRB     r1,[sp,#0]
        MOVS     r0,#0x2e
        BL       LIS3DH_WriteReg
        CBNZ     r0,|L51.60|
        MOVS     r0,#0
        B        |L51.10|
|L51.60|
        MOVS     r0,#1
        B        |L51.10|
        ENDP


        AREA ||i.LIS3DH_WriteReg||, CODE, READONLY, ALIGN=2

LIS3DH_WriteReg PROC
        PUSH     {r0,r1,r4,lr}
        SUB      sp,sp,#8
        MOV      r4,r0
        MOVS     r0,#0
        STR      r0,[sp,#4]
        MOVS     r2,#0
        MOVS     r1,#0x10
        LDR      r0,|L52.88|
        BL       HAL_GPIO_WritePin
        MOVS     r0,#1
        BL       HAL_Delay
        BIC      r4,r4,#0x80
        BIC      r4,r4,#0x40
        STR      r4,[sp,#4]
        MOV      r3,#0x1000
        MOVS     r2,#1
        ADD      r1,sp,#4
        LDR      r0,|L52.92|
        BL       HAL_SPI_Transmit
        MOV      r3,#0x1000
        MOVS     r2,#1
        ADD      r1,sp,#0xc
        LDR      r0,|L52.92|
        BL       HAL_SPI_Transmit
        MOVS     r2,#1
        MOVS     r1,#0x10
        LDR      r0,|L52.88|
        BL       HAL_GPIO_WritePin
        MOVS     r0,#1
        BL       HAL_Delay
        MOVS     r0,#1
        ADD      sp,sp,#0x10
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L52.88|
        DCD      0x40020000
|L52.92|
        DCD      hspi1

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.data||, DATA, ALIGN=0

ODR_old_value
        DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\Src\\lis3dh_driver.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_lis3dh_driver_c_5c9e0f0f____REV16|
#line 138 "../Drivers/CMSIS/Include/core_cmInstr.h"
|__asm___15_lis3dh_driver_c_5c9e0f0f____REV16| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_lis3dh_driver_c_5c9e0f0f____REVSH|
#line 153
|__asm___15_lis3dh_driver_c_5c9e0f0f____REVSH| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___15_lis3dh_driver_c_5c9e0f0f____RRX|
#line 328
|__asm___15_lis3dh_driver_c_5c9e0f0f____RRX| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT LIS3DH_FIFOModeEnable [CODE]
        EXPORT LIS3DH_Get6DPosition [CODE]
        EXPORT LIS3DH_GetAccAxesRaw [CODE]
        EXPORT LIS3DH_GetAuxRaw [CODE]
        EXPORT LIS3DH_GetClickResponse [CODE]
        EXPORT LIS3DH_GetFifoSourceBit [CODE]
        EXPORT LIS3DH_GetFifoSourceFSS [CODE]
        EXPORT LIS3DH_GetFifoSourceReg [CODE]
        EXPORT LIS3DH_GetInt1Src [CODE]
        EXPORT LIS3DH_GetInt1SrcBit [CODE]
        EXPORT LIS3DH_GetIntCounter [CODE]
        EXPORT LIS3DH_GetReg3Bit [CODE]
        EXPORT LIS3DH_GetStatusAUX [CODE]
        EXPORT LIS3DH_GetStatusAUXBit [CODE]
        EXPORT LIS3DH_GetStatusBit [CODE]
        EXPORT LIS3DH_GetStatusReg [CODE]
        EXPORT LIS3DH_GetTempRaw [CODE]
        EXPORT LIS3DH_GetWHO_AM_I [CODE]
        EXPORT LIS3DH_HPFAOI1Enable [CODE]
        EXPORT LIS3DH_HPFAOI2Enable [CODE]
        EXPORT LIS3DH_HPFClickEnable [CODE]
        EXPORT LIS3DH_Int1LatchEnable [CODE]
        EXPORT LIS3DH_ReadReg [CODE]
        EXPORT LIS3DH_Reboot [CODE]
        EXPORT LIS3DH_ResetInt1Latch [CODE]
        EXPORT LIS3DH_SetADCAux [CODE]
        EXPORT LIS3DH_SetAxis [CODE]
        EXPORT LIS3DH_SetBDU [CODE]
        EXPORT LIS3DH_SetBLE [CODE]
        EXPORT LIS3DH_SetClickCFG [CODE]
        EXPORT LIS3DH_SetClickLATENCY [CODE]
        EXPORT LIS3DH_SetClickLIMIT [CODE]
        EXPORT LIS3DH_SetClickTHS [CODE]
        EXPORT LIS3DH_SetClickWINDOW [CODE]
        EXPORT LIS3DH_SetFilterDataSel [CODE]
        EXPORT LIS3DH_SetFullScale [CODE]
        EXPORT LIS3DH_SetHPFCutOFF [CODE]
        EXPORT LIS3DH_SetHPFMode [CODE]
        EXPORT LIS3DH_SetInt1Duration [CODE]
        EXPORT LIS3DH_SetInt1Pin [CODE]
        EXPORT LIS3DH_SetInt1Threshold [CODE]
        EXPORT LIS3DH_SetInt2Pin [CODE]
        EXPORT LIS3DH_SetInt6D4DConfiguration [CODE]
        EXPORT LIS3DH_SetIntConfiguration [CODE]
        EXPORT LIS3DH_SetIntMode [CODE]
        EXPORT LIS3DH_SetMode [CODE]
        EXPORT LIS3DH_SetODR [CODE]
        EXPORT LIS3DH_SetSPIInterface [CODE]
        EXPORT LIS3DH_SetSelfTest [CODE]
        EXPORT LIS3DH_SetTemperature [CODE]
        EXPORT LIS3DH_SetTriggerInt [CODE]
        EXPORT LIS3DH_SetWaterMark [CODE]
        EXPORT LIS3DH_WriteReg [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT HAL_GPIO_WritePin [CODE]
        IMPORT HAL_Delay [CODE]
        IMPORT HAL_SPI_Transmit [CODE]
        IMPORT HAL_SPI_Receive [CODE]
        IMPORT hspi1 [DATA]

        KEEP ODR_old_value

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
